library(QR)
hello
hello()
?hello
pwd
getwd()
library(QR)
?myQR
?QR
library(QR)
?QR
?myQE
?myQR
?hello
?hello
?myQR
library(QR)
?myQR
library(QR)
library(QR)
?myQR
?myQRC
?myQRC
library(QR)
?myQRC
library(QR)
library(QR)
?myQRC
?PCA
?myLM
myLM()
X    <- matrix(rnorm(n * p), nrow = n)
n = 100
p = 3
X    <- matrix(rnorm(n * p), nrow = n)
beta <- matrix(1:p, nrow = p)
Y    <- X %*% beta + rnorm(n)
myLM(X,Y)
library(myPackage)
n = 100
p = 5
X    <- matrix(rnorm(n * p), nrow = n)
myQR(X)
beta <- rnorm(p)
Y    <- 1 * (runif(n) < expit(X %*% beta))
myLM(X,Y)
myLogistic(X,Y)
myPCA(X)
r = dim(A)[1]
A = X
r = dim(A)[1]
c = dim(A)[2]
V = matrix(runif(r * r), nrow = r)
numIter = 1000
for(i in 1 : numIter){
output = myQR(V)
Q = output$Q
V = t(A) %*% Q
}
size(A)
shape(A)
A.size
dim(A)
A = A*t(A);
t(A)
A*t(A)
V = matrix(runif(r * r), nrow = r)
dim(V)
myPCA(V)
break
V = matrix(runif(5 * 5), nrow = 5)
myPCA(V)
library(myPackage)
library(myPackage)
myLM(X,Y)
?myLM
?lm
library(myPackage)
?myLM
X
X    <- matrix(rnorm(n * p), nrow = n)
n
p
myLM(X,Y)
library(myPackage)
?myLM
?LM
?lm
myLogistic(X,Y)
Y    <- 1 * (runif(n) < expit(X %*% beta))
expit
Y
dim(Y)
n <- 100
p <- 5
X    <- matrix(rnorm(n * p), nrow = n)
dim(X)
dim(Y)
Y    <- 1 * (runif(n) < expit(X %*% beta))
Y <- matrix(rbinom(10 * 5, 1, 0.5), ncol = 5, nrow = 10)
Y <- round(matrix(runif(n * 1), n, 1))
Y
Y <- round(matrix(runif(n * 1), n, 1))
myLogistic(X,Y)
library(myPackage)
?myLogistic
X    <- matrix(rnorm(n * n), nrow = n)
n = 4
X    <- matrix(rnorm(n * n), nrow = n)
myPCA(X)
library(myPackage)
?myPCA
n<-4
p<-2
X    <- matrix(rnorm(n * p), nrow = n)
myQR(X)
library(myPackage)
myQR(X)
?myQR
library(myPackage)
?myLM
?myLogistic
n    <- 100
p    <- 3
X    <- matrix(rnorm(n * p), nrow = n)
beta <- matrix(1:p, nrow = p)
Y    <- X %*% beta + rnorm(n)
R_coef  <- coef(lm(Y ~ X))
my_coef <- myLinearRegression(X, Y)
my_coef <- myLM(X, Y)
library(myPackage)
n    <- 100
p    <- 3
X    <- matrix(rnorm(n * p), nrow = n)
beta <- matrix(1:p, nrow = p)
Y    <- X %*% beta + rnorm(n)
my_coef <- myLinearRegression(X, Y)
my_coef <- myLM(X, Y)
library(myPackage)
?LM
?myLM
?myLogistic
X
Y
myLM(X,Y)
beta <- rnorm(p)
Y    <- 1 * (runif(n) < expit(X %*% beta))
logistic_beta <- myLogistic(X, Y)
logistic_beta
logistic_R = glm(formula = Y ~ X + 0,  family=binomial("logit"))
logistic_R$coefficients
summary(logistic_R$coefficients)[2,]
summary(logistic_R$coefficients)
summary(logistic_R)$coefficients[2,]
summary(logistic_R)$coefficients
X    <- matrix(rnorm(n * p), nrow = n)
beta <- matrix(1:p, nrow = p)
Y    <- X %*% beta + rnorm(n)
lmfit = lm(Y~X)
R_coef  <- coef(lmfit)
summary(lmfit)$coefficients[,2]
myLinearRegression(X, Y)$coefficients
myLN(X, Y)$coefficients
myLM(X, Y)$coefficients
myLM(X, Y)$standard_error
X    <- matrix(rnorm(100 * 5), nrow = 100)
beta <- matrix(1:5, nrow = 5)
Y <- X %*% beta + rnorm(100)
myLM(X,Y)
library(myPackage)
myLM(X,Y)
library(myPackage)
?myLogistic
n <- 100
p <- 5
X    <- matrix(rnorm(n * p), nrow = n)
Y <- round(matrix(runif(n), n, 1))
myLogistic(X,Y)
library(help = "datasets")
data('CO2')
data_set = data('CO2')
data_set
data_set = data(CO2)
data_set
data_set <- c("CO2")
data_set
data_set <- c("CO2)
data_set <- c(CO2)
)
''
""
break
")"
data_set <- c(CO2)
data_set
library(aod)
install.packages("aod")
library(aod)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(datasets)
ir_data <- iris
head(ir_data)
ir_data<-ir_data[1:100,]
ir_data<-ir_data[1:100,]
set.seed(100)
samp<-sample(1:100,80)
ir_test<-ir_data[samp,]
ir_ctrl<-ir_data[-samp,]
install.packages("GGally")
y<-ir_test$Species;
x<-ir_test$Sepal.Length
glfit <- myLogistic(X,Y)
glfit
newdata<- data.frame(x=ir_ctrl$Sepal.Length)
predicted_val<-predict(glfit, newdata, type="response")
?predict
source('D:/UCLA/Fall 2017/STATS202A - Stats Programming/Assignments/Assignment 7/Lasso_Answer.r')
X    <- matrix(rnorm(n * p), nrow = n)
Y <- round(matrix(runif(n), n, 1))
lambda_all = c(0.1, 0.01, 0.001)
myLasso(X,Y, lambda_all)
myLasso(X,Y, c(1, 10, 100))
myLasso(X,Y, c(0.1, 0.2, 0.3, 0.5))
matrix(rep(0, p), nrow = p)
matrix(rep(0, p * L), nrow = p)
L = 3
matrix(rep(0, p * L), nrow = p)
kkk <- matrix(rep(0, p * L), nrow = p)
cbind(rep(1,p), kkk)
source('D:/UCLA/Fall 2017/STATS202A - Stats Programming/Assignments/Assignment 7/myLasso.R')
myLasso(X,Y, c(0.1, 0.2, 0.3, 0.5))
source('D:/UCLA/Fall 2017/STATS202A - Stats Programming/Assignments/Assignment 7/myLasso.R')
myLasso(X,Y, c(0.1, 0.2, 0.3, 0.5))
source('D:/UCLA/Fall 2017/STATS202A - Stats Programming/Assignments/Assignment 7/myLasso.R')
myLasso(X,Y, c(0.1, 0.2, 0.3, 0.5))
p
rep(0,p)
X[,1]
X
dim(X)
dim(X[,1])
dim(X[, 1])
dim(X[, 2])
kkk = X[,1]
dim(kkk)
kkk
dim(matrix(kkk))
beta_all = matrix(rep(0, p * L), nrow = p)
beta_all
beta_all = cbind(rep(1,p),matrix(rep(0, p * L)))
beta_all
L
beta_all = matrix(rep(0, p * L), nrow = p)
cbind(rep(1,p),beta_all)
library(myPackage)
X
Y
lambda_all
lambda_all <- c(0.1, 0.01, 0.001)
myLasso(X,Y,lambda_all)
?myLasso
